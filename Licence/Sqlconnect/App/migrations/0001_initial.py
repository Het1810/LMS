# Generated by Django 5.0.1 on 2024-02-21 18:19

import datetime
import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CreActions',
            fields=[
                ('intid', models.IntegerField(db_column='intId', primary_key=True, serialize=False)),
                ('nvarname', models.CharField(db_collation='SQL_Latin1_General_CP1_CI_AS', db_column='nvarName', max_length=50)),
            ],
            options={
                'db_table': 'CRE_Actions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CreClientLicense',
            fields=[
                ('intid', models.AutoField(db_column='intId', primary_key=True, serialize=False)),
                ('nvarkey', models.CharField(db_collation='SQL_Latin1_General_CP1_CI_AS', db_column='nvarKey', max_length=300)),
                ('intvalidity', models.IntegerField(db_column='intValidity')),
                ('bitactive', models.BooleanField(db_column='bitActive', default=False)),
                ('nvarreference', models.CharField(blank=True, db_collation='SQL_Latin1_General_CP1_CI_AS', db_column='nvarReference', max_length=100, null=True)),
                ('bitistrashed', models.BooleanField(db_column='bitIsTrashed', default=False)),
            ],
            options={
                'db_table': 'CRE_Client_License',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CreClients',
            fields=[
                ('intid', models.AutoField(db_column='intId', primary_key=True, serialize=False)),
                ('nvarname', models.CharField(db_collation='SQL_Latin1_General_CP1_CI_AS', db_column='nvarName', max_length=100)),
                ('nvaremail', models.CharField(blank=True, db_collation='SQL_Latin1_General_CP1_CI_AS', db_column='nvarEmail', max_length=50, null=True)),
                ('nvaraddress', models.CharField(blank=True, db_collation='SQL_Latin1_General_CP1_CI_AS', db_column='nvarAddress', max_length=300, null=True)),
                ('nvarcontact', models.CharField(blank=True, db_collation='SQL_Latin1_General_CP1_CI_AS', db_column='nvarContact', max_length=15, null=True)),
                ('bitistrashed', models.BooleanField(db_column='bitIsTrashed', default=False)),
            ],
            options={
                'db_table': 'CRE_Clients',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CreLogs',
            fields=[
                ('intid', models.BigAutoField(db_column='intId', primary_key=True, serialize=False)),
                ('intuserid', models.IntegerField(db_column='intUserId')),
                ('dtdatetime', models.DateTimeField(db_column='dtDateTime')),
            ],
            options={
                'db_table': 'CRE_Logs',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CreModules',
            fields=[
                ('intid', models.AutoField(db_column='intId', primary_key=True, serialize=False)),
                ('nvarname', models.CharField(db_collation='SQL_Latin1_General_CP1_CI_AS', db_column='nvarName', max_length=50)),
            ],
            options={
                'db_table': 'CRE_Modules',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CreUsers',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('intid', models.AutoField(db_column='intId', primary_key=True, serialize=False)),
                ('nvarusername', models.CharField(db_collation='SQL_Latin1_General_CP1_CI_AS', db_column='nvarUsername', max_length=50)),
                ('nvarpassword', models.CharField(db_collation='SQL_Latin1_General_CP1_CI_AS', db_column='nvarPassword', max_length=50)),
                ('bitactive', models.BooleanField(db_column='bitActive')),
            ],
            options={
                'db_table': 'CRE_Users',
                'managed': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='CreLicenseStatus',
            fields=[
                ('intlicenseid', models.OneToOneField(db_column='intLicenseId', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='App.creclientlicense')),
                ('nvarmacaddress', models.CharField(db_collation='SQL_Latin1_General_CP1_CI_AS', db_column='nvarMacAddress', max_length=50)),
                ('dtstartdate', models.DateTimeField(db_column='dtStartDate', default=datetime.datetime(2024, 1, 1, 0, 0))),
                ('dtenddate', models.DateTimeField(db_column='dtEndDate')),
            ],
            options={
                'db_table': 'CRE_License_Status',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(max_length=30, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
